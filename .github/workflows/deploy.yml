name: Deploy Laravel Application to Production Server
on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.3

    - name: Install Composer Dependencies
      run: composer install --optimize-autoloader --no-dev --no-progress --no-interaction --prefer-dist

    - name: Install Node
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    - name: Install NPM Dependencies
      run: npm install

    - name: Build NPM Assets
      run: npm run build

    - name: Synchronize Files To Server
      uses: easingthemes/ssh-deploy@v2.1.5
      with:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        ARGS: "-rlgoDzvc -i"
        SOURCE: "dist/"
        TARGET: /home/djamgt/aplikasi/www
        REMOTE_HOST: ${{ secrets.VPS_HOST }}
        REMOTE_USER: ${{ secrets.VPS_USER }}
        EXCLUDE: "/dist/, /node_modules/"
        SCRIPT_BEFORE: |
          whoami
          ls -al
        SCRIPT_AFTER: |
          whoami
          ls -al
          echo $RSYNC_STDOUT

    - name: Run Remote/Artisan Commands
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          cd /home/djamgt/aplikasi/www
          git config --global --add safe.directory '*'
          if [ ! -d $VAR_DIREKTORI/.git ]; then echo 'Project belum ditemukan di direktori $VAR_DIREKTORI' && cd "/home/djamgt/aplikasi/www" && git clone https://github.com/Djatiaja/samikados.git .; fi
          git pull origin main
          if [ -f .htaccess ]; then
            echo "Removing .htaccess file..."
            rm .htaccess
            echo "${{ secrets.VAR_FILE_HTACCESS }}" >> .htaccess
            echo "${{ secrets.VAR_FILE_HTACCESS }}"
          else
            echo ".htaccess file not found."
          fi
          
          if [ -f .env ]; then
            echo "Removing .env file..."
            rm .env
            echo "${{ secrets.env }}" >> .env
          else
            echo ".env file not found."
          fi
          
          cd "/home/djamgt/aplikasi/www"
          ls -la
          docker-compose exec -T webserver composer install
          docker-compose exec -T webserver npm i
          docker-compose exec -T webserver npm run build
          docker-compose exec -T webserver composer update
          docker-compose exec -T webserver php artisan migrate --force
          docker-compose exec -T webserver php artisan db:seed
          docker-compose exec -T webserver php artisan optimize

          
